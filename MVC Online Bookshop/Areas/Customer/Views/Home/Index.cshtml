@{ 
    ViewData["Title"] = "Home";
}
@model FrontPageVM

@section Styles
{
    <style>
       .carousel-item .col {
         padding: 0 5px;
        }

        @@media (max-width: 767px) {
          .carousel-inner .carousel-item > div {
            display: none;
          }
          .carousel-inner .carousel-item > div:first-child {
            display: block;
          }
                }

        .carousel-inner .carousel-item.active,
        .carousel-inner .carousel-item-next,
        .carousel-inner .carousel-item-prev {
          display: flex;
        }

        /* medium and up screens */
        @@media (min-width: 768px) {
          .carousel-inner .carousel-item-end.active,
          .carousel-inner .carousel-item-next {
            transform: translateX(16.6%);
          }

          .carousel-inner .carousel-item-start.active,
          .carousel-inner .carousel-item-prev {
            transform: translateX(-16.6%);
          }
  
          /*  half slides CSS */

          .carousel-inner:before {
            position: absolute;
            top: 0;
            bottom: 0;
            right: 90%;
            left: 0;
            content: "";
            display: block;
            background-color: #fff;
            z-index: 2;
          }
          .carousel-inner:after {
            position: absolute;
            top: 0;
            bottom: 0;
            right: 0;
            left: 90%;
            content: "";
            display: block;
            background-color: #fff;
            z-index: 2;
          }

          .carousel-control-prev {
            left: 5%;
            top: -25%;
          }

          .carousel-control-next {
            right: 5%;
            top: -25%;
          }
         }

        span.carousel-control-next-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%234582ec' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/%3e%3c/svg%3e");
        }

        span.carousel-control-prev-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%234582ec' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/%3e%3c/svg%3e");
        }

        .carousel-inner .carousel-item-end,
        .carousel-inner .carousel-item-start {
          transform: translateX(0);
        }

        .book-cover {
            max-height: 260px;
        }

      
    </style>
}

<div class="vstack gap-5">
    <div class="text-center my-3 py-2">
        <h1 class="display-1">@Model.Title</h1>
    </div>


    <div class="vstack gap-3">

        @* CAROUSELS *@
        @for (var i = 0; i < @Model.Carousels.Count; i++)
        {
            <div id="@($"carousel{@i}")">
                @await Component.InvokeAsync(name: "Carousel", new { carousel = Model.Carousels[i] })
            </div>
        }


    </div>
</div>



@section Scripts
{
    <script type="text/javascript">

        for (let i = 0; i < @Model.Carousels.Count; i++) {

            let items = document.querySelectorAll('#caraousel' + i + ' .carousel .carousel-item')
            items.forEach((el) => {
                const minPerSlide = 6
                let next = el.nextElementSibling
                for (var i = 1; i < minPerSlide; i++) {
                    if (!next) {
                        // wrap carousel by using first child
                        next = items[0]
                    }
                    let cloneChild = next.cloneNode(true)
                    el.appendChild(cloneChild.children[0])
                    next = next.nextElementSibling
                }
            })
        }
	    
		
    </script>
}
