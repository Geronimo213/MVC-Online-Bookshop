@{ 
    ViewData["Title"] = "Home";
}
@model FrontPageVM

@section Styles
{
    <link rel="stylesheet" href="css/FrontPage.css"/>
}

@section containerFluid
{
    @await Component.InvokeAsync(name: "HeaderCarousel")
}




<div id="FrontPageBody" class="vstack gap-2">

    @* CAROUSELS *@
    @for (var i = 0; i < @Model.Carousels.Count; i++)
    {
        <div id="@($"carousel{@i}")" class="p-2">
            @await Component.InvokeAsync(name: "Carousel", new { carousel = Model.Carousels[i] })
        </div>
    }


</div>




@section Scripts
{
    <script type="text/javascript">

        for (var i = 0; i < @Model.Carousels.Count; i++) {

            var items = document.querySelectorAll('#carousel' + i + ' .carousel .carousel-item');
            items.forEach((el) => {
                var minPerSlide = 6;
                var next = el.nextElementSibling;
                for (var j = 1; j < minPerSlide; j++) {
                    if (!next) {
                        // wrap carousel by using first child
                        next = items[0];
                    }
                    var cloneChild = next.cloneNode(true);
                    el.appendChild(cloneChild.children[0]);
                    next = next.nextElementSibling;
                }
            });
        }
	    
		
    </script>
}
