@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model PaginatedUserVM;
@{
    ViewData["Title"] = "User Management";
    var currentPageSize = (int?)ViewData["CurrentPageSize"];

    var routeUrl = Url.RouteUrl(ViewContext.RouteData.Values);
    var qsPath = ViewContext.HttpContext.Request.QueryString.Value;
    var returnUrl = $"{routeUrl}{qsPath}";

}

<div class="card shadow mt-4 mb-4">
    <div class="row py-2 m-0 card-header border-0 shadow-none">
        <div class="col-6">
            <h2 class="text-primary">@ViewData["Title"]</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl" class="btn btn-primary"><i class="bi bi-plus-circle-fill"></i> User</a>
        </div>
    </div>
    <div class="card-body table-responsive">
        <form id="page-form" method="get" asp-area="Admin" asp-controller="User" asp-action="Index">
            <input name="sortOrder" value="@ViewData["CurrentSort"]" hidden="hidden"/>
            <input name="pageSize" value="@currentPageSize" hidden="hidden"/>
            <input name="pageNumber" value="@Model.Users.PageIndex" hidden="hidden"/>

            <div class="form-control d-inline-flex flex-row flex-nowrap justify-content-around gap-2">
                <h6 class="text-info pt-3 my-auto">
                    Search : <input class="ms-1 my-auto align-middle" type="text" name="searchString" value="@ViewData["CurrentFilter"]"/>
                    <input type="submit" value="Search" class="btn btn-info"/>&nbsp; |
                    <a asp-area="Admin" asp-controller="User" asp-action="Index" class="ps-1 text-info">Reset Filters</a> &nbsp; |
                    Rows per page:
                    <div class="d-inline-flex gap-1">
                        <button id="pageSizeSubmit5" class="btn fs-6 fw-bold btn-link text-info p-0 m-0 @(currentPageSize == 5 ? "text-muted link-underline-opacity-0" : "")">5</button>

                        <button id="pageSizeSubmit10" class="btn fs-6 fw-bold btn-link text-info p-0 m-0 @(currentPageSize == 10 ? "text-muted link-underline-opacity-0" : "")">10</button>
 
                        <button id="pageSizeSubmit25" class="btn fs-6 fw-bold btn-link text-info p-0 m-0 @(currentPageSize == 25 ? "text-muted link-underline-opacity-0" : "")">25</button>
                    </div>
                </h6>
                <div class="d-flex flex-row gap-2">
                    <div class="">
                        <label asp-for="SelectedRoles" class="text-muted">Roles to Display</label>
                        <select asp-for="SelectedRoles" asp-items="@Model.RoleList" class="form-select w-auto" multiple="multiple" data-placeholder="Filter by role">
                        </select>
                    </div>
                    <div class="my-auto pt-2">
                        <input type="submit" value="Filter" class="btn btn-info d-inline-flex my-auto"/>
                    </div>
                </div>


            </div>

        </form>
        <table class="table table-bordered table-striped table-responsive">
            <thead class="">
            <tr>
                <th>
                    <button id="idSortSubmit" class="btn fw-bold btn-link text-info p-0 m-0">ID</button>
                </th>
                <th>
                    <button id="nameSortSubmit" class="btn fw-bold btn-link text-info p-0 m-0">Name</button>
                </th>
                <th>
                    <button id="roleSortSubmit"  class="btn fw-bold btn-link text-info p-0 m-0">Role</button>
                </th>
                <th>
                    Email
                </th>
                <th>
                    Phone
                </th>

            </tr>
            </thead>
            <tbody class="">
            @* Edit and Delete buttons *@
            @foreach (var user in Model.Users)
            {
                <tr class="">
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.Role</td>
                    <td>@user.NormalizedEmail</td>
                    <td>@user.PhoneNumber</td>
                    <td class="text-sm-center align-middle">
                        <div class=" btn-group" role="group">
                            @if (user.LockoutEnd > DateTime.Now)
                            {
                                <a asp-area="Admin" asp-controller="User" asp-action="ToggleLock" asp-route-userId="@user.Id" class="btn btn-danger mx-2"><i class="bi bi-lock-fill"></i> Locked</a>
                            }
                            else
                            {
                                <a asp-area="Admin" asp-controller="User" asp-action="ToggleLock" asp-route-userId="@user.Id" class="btn btn-success mx-2"><i class="bi bi-unlock-fill"></i> Unlocked</a>
                            }
                            <a asp-area="Admin" asp-controller="User" asp-action="EditPermissions" asp-route-userId="@user.Id" class="btn btn-primary mx-2"><i class="bi bi-pencil-fill"></i> Permissions</a>
                            <a asp-area="Admin" asp-controller="User" asp-action="RemoveUser" asp-route-userId="@user.Id" class="btn btn-danger mx-2"><i class="bi bi-trash3-fill"></i> Delete</a>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>

        @{
            var prevDisabled = Model.Users.HasPreviousPage ? "" : "disabled";
            var nextDisabled = Model.Users.HasNextPage ? "" : "disabled";
        }


        <div class="">
            <ul class="pagination">
                <li class="page-item">
                    <button id="navPagePrevious" class="page-link @prevDisabled">&laquo;</button>
                </li>

                <li class="page-item">
                    <button id="navPageFirst"  class="page-link @(Model.Users.PageIndex == 1 ? "active" : "")">1</button>
                </li>

                @for (var i = Math.Max(2, Model.Users.PageIndex - SD.PagesAroundIndex); i < Model.Users.TotalPages && i <= Model.Users.PageIndex + SD.PagesAroundIndex; i++)
                {
                    var active = i == Model.Users.PageIndex ? "active" : "";
                    var currentPage = i;
                    <li class="page-item @active">
                        <button id="navPage@(currentPage)" class="page-link">@currentPage</button>
                    </li>
                }

                @if (Model.Users.TotalPages > 1)
                {
                    <li class="page-item">
                        <button id="navPageLast" class="page-link @(Model.Users.PageIndex == @Model.Users.TotalPages ? "active" : "")">@Model.Users.TotalPages</button>
                    </li>
                }

                <li class="page-item">
                        <button id="navPageNext" class="page-link @nextDisabled">&raquo;</button>
                </li>

            </ul>

        </div>
    </div>

</div>

@section Scripts
{
    <script type="text/javascript">

        $('.form-select').select2(
            {
                theme: 'bootstrap-5',
                width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                placeholder: $(this).data('placeholder'),
                closeOnSelect: false,
            });

    </script>
    <script type="text/javascript">
        function submitParam(inputName, queryName) {
            $("#page-form").submit(function () {
                var $input = $(this).find("input[name=" + inputName + "]");
                $input.val(queryName);
            });
            $("#page-form").submit();
        }
        $(document).ready(function(){


            //Page navigation
            $("#navPagePrevious").on("click", function () {
                submitParam('pageNumber', '@(Model.Users.PageIndex - 1)')
            })
            $("#navPageFirst").on("click", function () {
                submitParam('pageNumber', '1')
            })
            for (let i = Math.max(2, @Model.Users.PageIndex - @SD.PagesAroundIndex); i < @Model.Users.TotalPages && i <= @Model.Users.PageIndex + @SD.PagesAroundIndex; i++) {
                $("#navPage" + i).on("click", function () { 
                    submitParam('pageNumber', '' + i) 
                })
            }
            $("#navPageLast").on("click", function () {
                submitParam('pageNumber', '@Model.Users.TotalPages')
            })
            $("#navPageNext").on("click", function () {
                submitParam('pageNumber', '@(Model.Users.PageIndex + 1)')
            })

            //Sort Parameters
            $("#idSortSubmit").on("click", function () {
                submitParam('sortOrder', '@ViewData["IdSortParam"]')
            })
            $("#nameSortSubmit").on("click", function () {
                submitParam('sortOrder', '@ViewData["NameSortParam"]')
            })
            $("#roleSortSubmit").on("click", function () {
                submitParam('sortOrder', '@ViewData["RoleSortParam"]')
            })
            //Page Size Selection
            $("#pageSizeSubmit5").on("click", function () {
                submitParam('pageSize', '5')
            })
            $("#pageSizeSubmit10").on("click", function () {
                submitParam('pageSize', '10')
             })
            $("#pageSizeSubmit25").on("click", function () {
                submitParam('pageSize', '25')
             })

            
        });
        
        
    </script>
}